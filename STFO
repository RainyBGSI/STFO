local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()


-- LIBRARY

WindUI:SetNotificationLower(true)

WindUI:SetTheme("Dark")

WindUI:AddTheme({
  Name = "Dark",
  Accent = "#18181b",
  Outline = "#FFFFFF",
  Text = "#FFFFFF",
  Placeholder = "#999999",
  Background = "#0e0e10",
  Button = "#52525b",
  Icon = "#a1a1aa",
})

WindUI:GetTransparency(true)


-- WINDOW

local Window = WindUI:CreateWindow({
    Title = "Steal Time Simulator",
    Icon = "swords",
    Author = "Rainy",
    Folder = "STS",
    Size = UDim2.fromOffset(580, 460),
    Transparent = true,
    Theme = "Dark",
    SideBarWidth = 200,
    Background = "", -- rbxassetid only
    BackgroundImageTransparency = 0.42,
    HideSearchBar = true,
    ScrollBarEnabled = false,
    User = {
        Enabled = true,
        Anonymous = true,
        Callback = function()
            print("clicked")
        end,
    },
})


-- AUTO OPEN VAR

local selectedCaseValue = nil

local isAutoOpeningCase = false

local caseList = {
    ["Beginner Case"] = "Case_1",
    ["Vengful Case"] = "Case_2",
    ["Void Case"] = "Case_3",
    ["RGB Toy Case"] = "Case_4",
    ["The Rock Family"] = "Case_5",
    ["Crystallic Treasures"] = "Case_6",
    ["A Sheriff's Equipment!"] = "Case_7",
    ["Neo Neo Tempus"] = "Case_8",
    ["Burried Treasure"] = "Case_9",
    ["Negative Degrees"] = "Case_10",
    ["My Camping Equipment"] = "Case_11",
    ["Sunday Delight"] = "Case_12",
    ["Shroooooooms"] = "Case_13",
    ["Sakura Case"] = "Case_14",
    ["Volcanic Case"] = "Case_15",
    ["Toy Box"] = "Case_16",
    ["Stealing From The Gods"] = "Case_17",
    ["Case_18"] = "Case_18",
    ["Neon Red Dilemma"] = "Kill_Case_1",
    ["The Lost Souls"] = "Kill_Case_2",
    ["Burning Souls"] = "Kill_Case_3",
    ["X Marks The Spot"] = "Kill_Case_4",
    ["Shiny Rocks"] = "Diamond_Case_1",
    ["Neo Neo Crazy"] = "Diamond_Case_2",
    ["Diamond_Case_3"] = "Diamond_Case_3",
    ["Green or Pink?"] = "Diamond_Case_4",
    ["Freeeee"] = "Free_Case_1",
    ["The Lost Treasure"] = "Free_Case_2",
    -- [""] = "",
}


-- MAIN TAB

local Tab = Window:Tab({
  Title = "Main",
  Icon = "scroll",
  Locked = false,
})


-- MAIN ELEMENTS



-- CASES TAB

local Tab = Window:Tab({
  Title = "Cases",
  Icon = "briefcase",
  Locked = false,
})


-- CASE ELEMENTS


local Dropdown = Tab:Dropdown({
    Title = "Select Case",
    Values = { "Beginner Case",
            "Vengful Case",
            "Void Case",
            "RGB Toy Case",
            "The Rock Family",
            "Crystallic Treasures",
            "A Sheriff's Equipment!",
            "Neo Neo Tempus",
            "Burried Treasure",
            "Negative Degrees",
            "My Camping Equipment",
            "Sunday Delight",
            "Shroooooooms",
            "Sakura Case",
            "Volcanic Case",
            "Toy Box",
            "Stealing From The Gods",
            "Case_18",
            "Neon Red Dilemma",
            "The Lost Souls",
            "Burning Souls",
            "X Marks The Spot",
            "Shiny Rocks",
            "Neo Neo Crazy",
            "Diamond_Case_3",
            "Green or Pink?",
            "Freeeee",
            "The Lost Treasure" },
    Value = "None",
    Callback = function(option) 
      local selected = typeof(option) == "table" and option[1] or option
      selectedCaseValue = caseList[selected]
      print("Category selected: " .. option) 
      task.wait()
    end
})

local Toggle = Tab:Toggle({
    Title = "Enable Auto Open",
    Desc = "Works from Anywhere",
    Icon = nil,
    Type = "Checkbox",
    Default = false,
    Callback = function(state) 
      isAutoOpeningCase = state
      if isAutoOpeningCase then
        task.spawn(function()
          while isAutoOpeningCase do
            if selectedCaseValue then
              game:GetServive:("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("OpenCase"):FireServer(selectedCaseValue)
              task.wait()
            end
          end
        end)
      end
      print("Toggle Activated" .. tostring(state))
    end
})
