-- CALLING THE LIBRARY

local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()


-- LIBRARY

WindUI:SetNotificationLower(true)

WindUI:SetTheme("Dark")

WindUI:AddTheme({
  Name = "Dark",
  Accent = "#18181b",
  Outline = "#FFFFFF",
  Text = "#FFFFFF",
  Placeholder = "#999999",
  Background = "#0e0e10",
  Button = "#52525b",
  Icon = "#a1a1aa",
})

WindUI:GetTransparency(true)


-- WINDOW

local Window = WindUI:CreateWindow({
    Title = "Steal Time Simulator",
    Icon = "swords",
    Author = "Script by Rainy",
    Folder = "STS",
    Size = UDim2.fromOffset(420, 340),
    Transparent = true,
    Theme = "Dark",
    SideBarWidth = 150,
    Background = "", -- rbxassetid only
    BackgroundImageTransparency = 0.42,
    HideSearchBar = true,
    ScrollBarEnabled = false,
    User = {
        Enabled = true,
        Anonymous = true,
        Callback = function()
            print("clicked")
        end,
    },
})


-- AUTO OPEN VAR

local selectedCaseValue = nil

local isAutoOpeningCase = false

local caseList = {
    ["Beginner Case"] = "Case_1",
    ["Vengful Case"] = "Case_2",
    ["Void Case"] = "Case_3",
    ["RGB Toy Case"] = "Case_4",
    ["The Rock Family"] = "Case_5",
    ["Crystallic Treasures"] = "Case_6",
    ["A Sheriff's Equipment!"] = "Case_7",
    ["Neo Neo Tempus"] = "Case_8",
    ["Burried Treasure"] = "Case_9",
    ["Negative Degrees"] = "Case_10",
    ["My Camping Equipment"] = "Case_11",
    ["Sunday Delight"] = "Case_12",
    ["Shroooooooms"] = "Case_13",
    ["Sakura Case"] = "Case_14",
    ["Volcanic Case"] = "Case_15",
    ["Toy Box"] = "Case_16",
    ["Stealing From The Gods"] = "Case_17",
    ["Case_18"] = "Case_18",
    ["Neon Red Dilemma"] = "Kill_Case_1",
    ["The Lost Souls"] = "Kill_Case_2",
    ["Burning Souls"] = "Kill_Case_3",
    ["X Marks The Spot"] = "Kill_Case_4",
    ["Shiny Rocks"] = "Diamond_Case_1",
    ["Neo Neo Crazy"] = "Diamond_Case_2",
    ["Diamond_Case_3"] = "Diamond_Case_3",
    ["Green or Pink?"] = "Diamond_Case_4",
    ["Freeeee"] = "Free_Case_1",
    ["The Lost Treasure"] = "Free_Case_2",
    -- [""] = "",
}

-- MAIN VAR


-- REACH:


local Players = game:GetService("Players")

local LocalPlayer = Players.LocalPlayer

local function GetCharParent()
    local charParent
    repeat wait() until LocalPlayer.Character
    for _, char in pairs(workspace:GetDescendants()) do
        if string.find(char.Name, LocalPlayer.Name) and char:FindFirstChild("Humanoid") then
            charParent = char.Parent
            break
        end
    end
    return charParent
end

-- REACH BYPASS:

pcall(function()
    local mt = getrawmetatable(game)
    setreadonly(mt,false)
    local old = mt.__index
    mt.__index = function(Self, Key)
      if tostring(Self) == "HumanoidRootPart" and tostring(Key) == "Size" then
        return Vector3.new(2,2,1)
      end
      return old(Self, Key)
    end
    setreadonly(mt, true)
end)

-- END OF BYPASS:

local CHAR_PARENT = GetCharParent()
local HITBOX_SIZE = Vector3.new(15,15,15)
local HITBOX_COLOUR = Color3.fromRGB(255,0,0)

getgenv().HBE = true
local function AssignHitboxes(player)
    if player == LocalPlayer then return end

    local hitbox_connection;
    hitbox_connection = game:GetService("RunService").RenderStepped:Connect(function()
        local char = CHAR_PARENT:FindFirstChild(player.Name)
        if getgenv().HBE then
            if char and char:FindFirstChild("HumanoidRootPart") and (char.HumanoidRootPart.Size ~= HITBOX_SIZE or char.HumanoidRootPart.Color ~= HITBOX_COLOUR) then
                    char.HumanoidRootPart.Size = HITBOX_SIZE
                    char.HumanoidRootPart.Color = HITBOX_COLOUR
                    char.HumanoidRootPart.CanCollide = false
                    char.HumanoidRootPart.Transparency = 0.5
            end
            else
                if char and char:FindFirstChild("HumanoidRootPart") then
                hitbox_connection:Disconnect()
                char.HumanoidRootPart.Size = Vector3.new(2,2,1)
                char.HumanoidRootPart.Transparency = 1
                end
        end
    end)
end

Players.PlayerAdded:Connect(function(player)
    if getgenv().HBE then
        AssignHitboxes(player)
    end
end)


-- MAIN TAB

local MainTab = Window:Tab({
  Title = "Main",
  Icon = "scroll",
  Locked = false,
})


-- MAIN ELEMENTS

local Toggle = MainTab:Toggle({
    Title = "Reach (Test)",
    Desc = "Reach / Hitbox Expander",
    Icon = "check",
    Type = "Checkbox",
    Default = false,
    Callback = function(state) 
        getgenv().HBE = state
        if getgenv().HBE then
              for _, player in ipairs(Players:GetPlayers()) do
                  AssignHitboxes(player)
              end
        end
    end
})

local Toggle = MainTab:Toggle({
    Title = "Disable Swords Notifications",
    Desc = "Hides Swords Notifications",
    Icon = "check", -- Optional icon
    Type = "Checkbox",
    Default = false, -- Notifications are visible by default
    Callback = function(state)
        local player = game:GetService("Players").LocalPlayer
        local notificationsUI = player:WaitForChild("PlayerGui"):WaitForChild("Main Interface"):WaitForChild("Frames"):WaitForChild("Notifications")
        notificationsUI.Visible = not state
    end
})



-- CASES TAB

local CaseTab = Window:Tab({
  Title = "Cases",
  Icon = "briefcase",
  Locked = false,
})


-- CASE ELEMENTS


local Dropdown = CaseTab:Dropdown({
    Title = "Select Case",
    Values = {
      "None",
      "Beginner Case",
      "Vengful Case",
      "Void Case",
      "RGB Toy Case",
      "The Rock Family",
      "Crystallic Treasures",
      "A Sheriff's Equipment!",
      "Neo Neo Tempus",
      "Burried Treasure",
      "Negative Degrees",
      "My Camping Equipment",
      "Sunday Delight",
      "Shroooooooms",
      "Sakura Case",
      "Volcanic Case",
      "Toy Box",
      "Stealing From The Gods",
      "Case_18",
      "Neon Red Dilemma",
      "The Lost Souls",
      "Burning Souls",
      "X Marks The Spot",
      "Shiny Rocks",
      "Neo Neo Crazy",
      "Diamond_Case_3",
      "Green or Pink?",
      "Freeeee",
      "The Lost Treasure",
    },
    Value = "None",
    Callback = function(option) 
      selectedCaseValue = caseList[option]
        print("Category selected: " .. option) 
    end
})

local Toggle = CaseTab:Toggle({
    Title = "Enable Auto Open",
    Desc = "Works from Anywhere",
    Icon = "check",
    Type = "Checkbox",
    Default = false,
    Callback = function(state) 
      isAutoOpeningCase = state
      while isAutoOpeningCase do
        if selectedCaseValue then
          local args = {
            selectedCaseValue
          }
          game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("OpenCase"):FireServer(unpack(args))
        end
        task.wait()
      end
        print("Toggle Activated" .. tostring(state))
    end
})




-- COOKING TAB

local CookingTab = Window:Tab({
  Title = "Cooking",
  Icon = "chef-hat",
  Locked = false,
})


-- COOKING ELEMENTS

local Toggle = CookingTab:Toggle({
    Title = "Auto Cooks Big Fish",
    Desc = "Must be near Campfire",
    Icon = "check", -- Optional: use any icon you like
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        getgenv().autoCookFish = state

        local function getPrompt()
            return workspace:WaitForChild("World Building"):WaitForChild("Prompts"):FindFirstChild("CookFish"):FindFirstChildOfClass("ProximityPrompt")
        end

        task.spawn(function()
            while getgenv().autoCookFish do
                local prompt = getPrompt()
                if prompt then
                    fireproximityprompt(prompt)
                else
                    warn("CookFish ProximityPrompt not found.")
                end
                task.wait()
            end
        end)
    end
})

local Button = CookingTab:Button({
    Title = "Delete Overcooked Fishes (Effect)",
    Desc = "Permanently removes the Overcooked Fish Effect",
    Locked = false,
    Callback = function()
        local path = game:GetService("ReplicatedStorage")
            :WaitForChild("Modules")
            :WaitForChild("Controllers")
            :WaitForChild("VisualEffectController")
            :WaitForChild("VisualEffects")
            :WaitForChild("Part_Providers")

        local overcooked = path:FindFirstChild("Overcooked_Fish")
        if overcooked then
            overcooked:Destroy()
            print("Overcooked Fishes deleted.")
        else
            warn("Overcooked Fish not found.")
        end
    end
})

-- PLAYER TAB



local PlayerTab = Window:Tab({
  Title = "Player",
  Icon = "user-round",
  Locked = false,
})


-- PLAYER ELEMENT
